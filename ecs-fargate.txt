AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Fargate deployment for Barbershop backend with ALB and HTTPS

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id

Resources:

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: barbershop-cluster

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ecsTaskExecutionRole-barbershop
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/barbershop
      RetentionInDays: 3

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: barbershop-alb
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref SecurityGroupId
      Scheme: internet-facing
      Type: application

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: barbershop-target-group
      Port: 5000
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      Certificates:
        - CertificateArn: arn:aws:acm:us-east-1:127311923021:certificate/default
      SslPolicy: ELBSecurityPolicy-2016-08

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: barbershop-task
      RequiresCompatibilities: [FARGATE]
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: barber-backend
          Image: 112543404666.dkr.ecr.ap-south-1.amazonaws.com/barber-shop-sql:latest
          PortMappings:
            - ContainerPort: 5000
          Environment:
            - Name: DB_HOST
              Value: barbershop.cfu6u8eg6yyh.ap-south-1.rds.amazonaws.com
            - Name: DB_USER
              Value: Manisankar
            - Name: DB_PASS
              Value: Manish2413
            - Name: DB_NAME
              Value: barbershop
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/barbershop
              awslogs-region: ap-south-1
              awslogs-stream-prefix: ecs

  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: barbershop-service
      LaunchType: FARGATE
      DesiredCount: 1
      TaskDefinition: !Ref TaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref PublicSubnet1
            - !Ref PublicSubnet2
          SecurityGroups:
            - !Ref SecurityGroupId
      LoadBalancers:
        - ContainerName: barber-backend
          ContainerPort: 5000
          TargetGroupArn: !Ref TargetGroup

Outputs:
  LoadBalancerDNS:
    Description: Public DNS name for ALB
    Value: !GetAtt LoadBalancer.DNSName

  ClusterName:
    Description: ECS Cluster Name
    Value: !Ref ECSCluster
